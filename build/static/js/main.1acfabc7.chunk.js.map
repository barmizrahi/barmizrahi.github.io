{"version":3,"sources":["components/Expenses/ExpensesFilter.js","components/UI/Card.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseTitlePrice.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpensesFilter","props","className","value","selected","onChange","event","onChangeFilter","target","Card","classes","children","ExpenseDate","month","date","toLocaleString","day","year","getFullYear","ExpenseTitlePrice","title","amount","ExpenseItem","ExpensesList","myList","length","map","expense","id","ChartBar","barFill","maxValue","Math","round","style","height","label","Chart","dataPointsValue","dataPoints","dataPoint","totalMax","max","ExpensesChart","chartData","expenses","getMonth","Expenses","useState","yearToShow","setYearToShow","list1","filter","toString","list2","total","reduce","previousValue","currentValue","selectedYear","listToFilter","ExpenseForm","enterTitle","setEnterTitle","enterPrice","setEnterPrice","enterDate","setEnterDate","onSubmit","preventDefault","expenseData","parseInt","Date","onSaveExpenseData","AddNewExpensesButton","type","min","step","onClick","NewExpense","isEditing","setIsEditing","enterExpenseData","expenseDate","random","onAddExpense","changeValue","DUMMY","App","myExpenses","setMyExpenses","prevExpenses","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1acfabc7.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './ExpensesFilter.css';\r\n//const [yearToShow,setYearToShow] = useState('');\r\nconst ExpensesFilter = (props) => {\r\n    function changeYearHandler(event){\r\n        props.onChangeFilter(event.target.value);\r\n       // console.log(event.target.value);\r\n        //setYearToShow(event.target.value);\r\n        //console.log(yearToShow);\r\n    };\r\n  return (\r\n    <div className='expenses-filter'>\r\n      <div className='expenses-filter__control'>\r\n        <label>Filter by year</label>\r\n        <select value = {props.selected} onChange={changeYearHandler}>\r\n          <option value='2022' >2022</option>\r\n          <option value='2021' >2021</option>\r\n          <option value='2020' >2020</option>\r\n          <option value='2019'>2019</option>\r\n        </select>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ExpensesFilter;","import './Card.css';\r\nfunction Card(props){\r\n    const classes = 'card ' + props.className;\r\n    return <div className={classes}>{props.children}</div>;\r\n}\r\nexport default Card;","import \"./ExpenseDate.css\";\r\nfunction ExpenseDate(props) {\r\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\r\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\r\n  const year = props.date.getFullYear();\r\n\r\n  return  <div className=\"expense-date\">\r\n  <div className=\"expense-date__month\">{month}</div>\r\n  <div className=\"expense-date__year\">{year}</div>\r\n  <div className=\"expense-date__day\">{day}</div>\r\n</div>;\r\n   \r\n}\r\n\r\nexport default ExpenseDate;\r\n","import \"./ExpenseItem.css\";\r\n\r\nfunction ExpenseTitlePrice(props){\r\n    return <div className=\"expense-item__description\">\r\n    <h2>{props.title}</h2>\r\n    <div className=\"expense-item__price\">{\"$\" + props.amount}</div>\r\n  </div>;\r\n}\r\n\r\nexport default ExpenseTitlePrice;","import \"./ExpenseItem.css\";\r\nimport Card from '../UI/Card';\r\nimport ExpenseDate from './ExpenseDate';\r\nimport ExpenseTitlePrice from './ExpenseTitlePrice';\r\nimport React  from 'react';\r\n\r\nfunction ExpenseItem(props) {\r\n // const [myTitle , setTitle] = useState(props.title);\r\n  \r\n  \r\n \r\n  return (\r\n    <Card className='expense-item'>\r\n     <ExpenseDate \r\n     date = {props.date}\r\n     ></ExpenseDate>\r\n     <ExpenseTitlePrice title = {props.title} amount = {props.amount}></ExpenseTitlePrice>\r\n    </Card>\r\n  );\r\n}\r\nexport default ExpenseItem;\r\n","import  ExpenseItem from \"./ExpenseItem\";\r\nimport './ExpensesList.css';\r\n\r\nfunction ExpensesList(props){\r\n    \r\n    if(props.myList.length === 0){\r\n        return <h2 className=\"expenses-list__fallback\"> No items to show</h2>;\r\n    }\r\n    return <ul className=\"expenses-list\">\r\n        {props.myList.map((expense) => (\r\n        <ExpenseItem\r\n        key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        ></ExpenseItem>\r\n      ))}\r\n    </ul>\r\n};\r\nexport default ExpensesList;","import \"./ChartBar.css\";\r\n\r\nfunction ChartBar(props) {\r\n  let barFill = \"0%\";\r\n\r\n  if (props.maxValue > 0) {\r\n    barFill = Math.round((props.value / props.maxValue) * 100) + \"%\";\r\n  }\r\n  return (<div>\r\n    <div className=\"chart-bar\">\r\n      <div className=\"chart-bar__inner\">\r\n        <div className = \"chart-bar__fill\" style ={{height: barFill}}></div>\r\n      </div>\r\n    </div>\r\n    <div className=\"chart-bar__label\">{props.label}</div>\r\n    </div>\r\n  );\r\n}\r\nexport default ChartBar;\r\n","import \"./Chart.css\";\r\nimport ChartBar from \"./ChartBar\";\r\n\r\nfunction Chart(props) {\r\n    const dataPointsValue = props.dataPoints.map((dataPoint) => dataPoint.value);\r\n    const totalMax = Math.max(...dataPointsValue);\r\n  return (\r\n    <div className=\"chart\">\r\n      {props.dataPoints.map((dataPoint) => (\r\n        <ChartBar\r\n          key={dataPoint.label}\r\n          value={dataPoint.value}\r\n          maxValue={totalMax}\r\n          label={dataPoint.label}\r\n        ></ChartBar>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Chart;\r\n","import Chart from '../Chart/Chart';\r\n\r\nfunction ExpensesChart(props){\r\n    const chartData = [\r\n    {label:'Jan', value:0},\r\n    {label:'Feb', value:0},\r\n    {label:'Mar', value:0},\r\n    {label:'Apr', value:0},\r\n    {label:'May', value:0},\r\n    {label:'Jun', value:0},\r\n    {label:'Jul', value:0},\r\n    {label:'Aug', value:0},\r\n    {label:'Sep', value:0},\r\n    {label:'Oct', value:0},\r\n    {label:'Nov', value:0},\r\n    {label:'Dec', value:0},\r\n];\r\n    for(const expense of props.expenses){\r\n        const expenseMonth = expense.date.getMonth();\r\n        chartData[expenseMonth].value += expense.amount;\r\n    }\r\n    return <div><Chart dataPoints={chartData}></Chart></div>;\r\n}\r\nexport default ExpensesChart;","import \"./Expenses.css\";\r\nimport React, { useState } from \"react\";\r\nimport ExpensesFilter from \"./ExpensesFilter\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\nfunction Expenses(props) {\r\n  const [yearToShow, setYearToShow] = useState(\"2020\");\r\n\r\n  function filterChangeHandler(selectedYear) {\r\n    setYearToShow(selectedYear);\r\n  }\r\n  const list1 = props.expenses.filter(expense => {return expense.date.getFullYear().toString()===yearToShow});\r\n  const reducer = (previousValue, currentValue) => previousValue+ currentValue;\r\n  const list2 = list1.map((expense) => expense.amount);\r\n  \r\n  var total = 0\r\n  if(list2.length !==0) {\r\n     total = list2.reduce(reducer);\r\n  }\r\n  return (\r\n    <li>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selected={yearToShow}\r\n          onChangeFilter={filterChangeHandler}\r\n          listToFilter = {props.expenses}\r\n        ></ExpensesFilter>\r\n        <ExpensesChart expenses={list1}></ExpensesChart>\r\n        <ExpensesList myList = {list1} ></ExpensesList>\r\n         <div className=\"expense-item__price\">{\"This Year You Spend: $\" + total}</div>\r\n      </Card>\r\n    </li>\r\n  );\r\n}\r\n\r\nexport default Expenses;\r\n","import \"./ExpenseForm.css\";\r\nimport React, { useState } from \"react\";\r\nfunction ExpenseForm(props) {\r\n  const [enterTitle, setEnterTitle] = useState(\"\");\r\n  const [enterPrice, setEnterPrice] = useState(0);\r\n  const [enterDate, setEnterDate] = useState(\"\");\r\n  function titleChangeHandler(event) {\r\n    setEnterTitle(event.target.value);\r\n  }\r\n\r\n  function priceChangeHandler(event) {\r\n    setEnterPrice(event.target.value);\r\n  }\r\n\r\n  function dateChangeHandler(event) {\r\n    setEnterDate(event.target.value);\r\n  }\r\n\r\n  function submitHendler(event) {\r\n    event.preventDefault();\r\n    const expenseData = {\r\n      title: enterTitle,\r\n      amount: parseInt(enterPrice),\r\n      date: new Date(enterDate),\r\n    };\r\n\r\n    //console.log(expenseDate);\r\n    props.onSaveExpenseData(expenseData);\r\n    setEnterTitle(\"\");\r\n    setEnterPrice(0);\r\n    setEnterDate(\"\");\r\n    props.AddNewExpensesButton(false);\r\n  }\r\n\r\n  function cancelHandler(){\r\n      props.AddNewExpensesButton(false);\r\n  }\r\n  return (\r\n    <form onSubmit={submitHendler}>\r\n      <div className=\"new-expense__controls\">\r\n        <div className=\"new-expense__controls\">\r\n          <label>Title</label>\r\n          <input\r\n            type=\"text\"\r\n            value={enterTitle}\r\n            onChange={titleChangeHandler}\r\n          ></input>\r\n        </div>\r\n        <div className=\"new-expense__controls\">\r\n          <label>Amount</label>\r\n          <input\r\n            type=\"number\"\r\n            min=\"0.01\"\r\n            step=\"0.01\"\r\n            value={enterPrice}\r\n            onChange={priceChangeHandler}\r\n          ></input>\r\n        </div>\r\n        <div className=\"new-expense__controls\">\r\n          <label>Date</label>\r\n          <input\r\n            type=\"date\"\r\n            min=\"2019-01-01\"\r\n            max=\"2022-12-31\"\r\n            value={enterDate}\r\n            onChange={dateChangeHandler}\r\n          ></input>\r\n        </div>\r\n      </div>\r\n      <div className=\"new-expense__actions\">\r\n        <button type=\"cancel\"  onClick = {cancelHandler} >Cancel</button>\r\n        <button type=\"submit\">Add Expense</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default ExpenseForm;\r\n","import \"./NewExpense.css\";\r\nimport React, { useState } from \"react\";\r\nimport ExpenseForm from \"./ExpenseForm\";\r\n\r\nfunction NewExpense(props) {\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  function saveExpenseDataHandler(enterExpenseData) {\r\n    const expenseDate = {\r\n      id: Math.random().toString(),\r\n      ...enterExpenseData,\r\n    };\r\n    props.onAddExpense(expenseDate);\r\n  }\r\n  function startEditing() {\r\n    setIsEditing(true);\r\n  }\r\n  function returnToNormal(changeValue){\r\n    setIsEditing(changeValue);\r\n  }\r\n  return (\r\n    <div className=\"new-expense\">\r\n      {!isEditing && <button onClick={startEditing}> Add New Expenses </button>}\r\n      {isEditing && (\r\n        <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} AddNewExpensesButton={returnToNormal}></ExpenseForm>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NewExpense;\r\n","import Expenses from \"./components/Expenses/Expenses\";\nimport React, { useState } from \"react\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\nfunction App() {\n  const[myExpenses, setMyExpenses]=useState(DUMMY);\n\n  function addExpenseHandler(expense){\n    //console.log(expense);\n    setMyExpenses(prevExpenses => {\n      //console.log(prevExpenses);\n     return [expense, ...prevExpenses];\n   });\n  };\n  return (\n    <div>\n     \n     <NewExpense onAddExpense={addExpenseHandler}></NewExpense>\n      <Expenses expenses ={myExpenses}></Expenses>\n    </div>\n  );\n}\n\nexport default App;\n// <AddExpenses onAddNewExpenses = {}></AddExpenses>","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}